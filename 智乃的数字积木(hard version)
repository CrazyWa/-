#include <bits/stdc++.h>
using namespace std;
const int N=1e5+10;
const long long mod=1e9+7;
char s[N];
int fa[N],cnt[N][10];
long long pw[N],ans;
int find(int x) {
    return fa[x]==x?x:fa[x]=find(fa[x]);
}
long long Pow(long long a,long long b) {
    long long ret=1;
    while(b) {
        if(b&1)ret=ret*a%mod;
        a=a*a%mod;
        b>>=1;
    }
    return ret;
}
int n,m,k;
long long f(int i) {
    long long ret=0;
    for(int j=i,k=9; k>=0; k--) {
        j+=cnt[i][k];
        ret=(ret+k*(pw[cnt[i][k]]-1)*Pow(9,mod-2)%mod*pw[n-j])%mod;
    }
    return ret;
}
void merge(int i) {
    int u=find(i),v=find(i+1);
    if(v!=i+1)return ;
    ans=(ans+mod-f(u)+mod-f(v))%mod;
    fa[v]=u;
    for(int i=0; i<=9; i++)cnt[u][i]+=cnt[v][i];
    ans=(ans+f(u))%mod;
}
int main() {
 
    cin>>n>>m>>k>>s;
    pw[0] = 1;
    for (int i = 1; i <= n; i++)pw[i] = pw[i - 1] * 10 % mod;
    vector<int>col(n);
    vector<set<int> >t(m+1);
    for(int i=0; i<n; i++) {
        cin>>col[i];
        t[col[i]].insert(i);
    }
    for(int i=0; i<n; i++) {
        fa[i]=i;
        ans=(ans*10+(s[i]-'0'))%mod;
        cnt[i][s[i]-'0']=1;
    }
    for(int i=0; i<n-1; i++) {
        if(col[i]==col[i+1])merge(i);
    }
    cout<<ans<<endl;
    while(k--) {
        //cout<<"yy";
        int u,v;
        cin>>u>>v;
        if(u!=v) {
            if(t[u].size()>t[v].size())swap(t[u],t[v]);
            for(auto x:t[u]) {
                if(t[v].count(x-1))merge(x-1);
                if(t[v].count(x+1))merge(x);
                t[v].insert(x);
            }
            t[u].clear();
        }
        cout<<ans<<endl;
    }
    return 0;
}
